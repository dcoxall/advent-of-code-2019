# Day 3: Crossed Wires
# https://adventofcode.com/2019/day/3

require 'set'

def calc_new_coordinates(dir, x, y, count)
  # are we changing the y axis
  case dir
  when 'U' then count.times.map { |n| [x, y - (n + 1)] }
  when 'D' then count.times.map { |n| [x, y + (n + 1)] }
  when 'L' then count.times.map { |n| [x - (n + 1), y] }
  when 'R' then count.times.map { |n| [x + (n + 1), y] }
  end
end

input = File.read('./inputs/03.txt')
lines = input.lines.map do |line|
  x, y = [0, 0]
  line.split(',').each_with_object(Set.new) do |inst, set|
    # take everything but the first character and convert it to an integer
    count = inst[1..-1].to_i
    # work out the coordinates generated by this instruction
    coordinates = calc_new_coordinates(inst[0], x, y, count)
    # merge the new coordinates into the set
    set.merge(coordinates)
    # set the x and y coordinate to the last coordinate calculated
    x, y = coordinates.last
  end
end

# find the intersection between all lines
crosses = lines.reduce(&:&)

# calculate the manhattan distance for each intersection
# sort them then take the first
puts crosses.map { |(x, y)| x.abs + y.abs }.sort.first
